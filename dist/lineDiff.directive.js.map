{"version":3,"file":"lineDiff.directive.js","sourceRoot":"","sources":["../src/lineDiff.directive.ts"],"names":[],"mappings":";;AAAA,sCAAgF;AAChF,mEAAiE;AACjE,mDAAgD;;IAS9C,2BACU,EAAc,EACd,GAA0B;QAD1B,OAAE,GAAF,EAAE,CAAY;QACd,QAAG,GAAH,GAAG,CAAuB;KAAM;IAEnC,oCAAQ,GAAf;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAEM,uCAAW,GAAlB;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAEO,sCAAU,GAAlB;QACE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SAClC;QACD,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SACpC;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KAChG;IAED,wCAAwC;;IAChC,sCAAU;;IAAlB,UAAmB,KAAkB;QACnC,IAAI,IAAY,CAAC;QACjB,IAAI,GAAG,OAAO,CAAC;QACf,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAjB,IAAI,IAAI,cAAA;YACX,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAiB,CAAC,CAAC,CAAC;gBAC7B,IAAI,IAAI,sBAAsB,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;aACtD;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAkB,CAAC,CAAC,CAAC;gBAC9B,IAAI,IAAI,6BAA6B,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC;aACpE;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAkB,CAAC,CAAC,CAAC;gBAC9B,IAAI,IAAI,6BAA6B,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC;aACpE;SACF;QACD,IAAI,IAAI,QAAQ,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC;KACb;;gBA9CF,gBAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;iBACvB;;;;gBANmB,iBAAU;gBACrB,8CAAqB;;;yBAO3B,YAAK;0BACL,YAAK;;4BATR;;AAOa,8CAAiB","sourcesContent":["import { Directive, ElementRef, Input, OnInit, OnChanges } from '@angular/core';\r\nimport { DiffMatchPatchService } from './diffMatchPatch.service';\r\nimport { Diff, DiffOp } from './diffMatchPatch';\r\n\r\n@Directive({\r\n  selector: '[lineDiff]',\r\n})\r\nexport class LineDiffDirective implements OnInit, OnChanges {\r\n  @Input() left: string | number | boolean;\r\n  @Input() right: string | number | boolean;\r\n\r\n  public constructor(\r\n    private el: ElementRef,\r\n    private dmp: DiffMatchPatchService) {  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateHtml();\r\n  }\r\n\r\n  public ngOnChanges(): void {\r\n    this.updateHtml();\r\n  }\r\n\r\n  private updateHtml(): void {\r\n    if (typeof this.left === 'number' || typeof this.left === 'boolean') {\r\n      this.left = this.left.toString();\r\n    }\r\n    if (typeof this.right === 'number' || typeof this.right === 'boolean') {\r\n      this.right = this.right.toString();\r\n    }\r\n    this.el.nativeElement.innerHTML = this.createHtml(this.dmp.getLineDiff(this.left, this.right));\r\n  }\r\n\r\n  // TODO: Need to fix this for line diffs\r\n  private createHtml(diffs: Array<Diff>): string {\r\n    let html: string;\r\n    html = '<div>';\r\n    for (let diff of diffs) {\r\n      if (diff[0] === DiffOp.Equal) {\r\n        html += '<span class=\"equal\">' + diff[1] + '</span>';\r\n      }\r\n      if (diff[0] === DiffOp.Delete) {\r\n        html += '<div class=\\\"del\\\"> - <del>' + diff[1] + '</del></div>\\n';\r\n      }\r\n      if (diff[0] === DiffOp.Insert) {\r\n        html += '<div class=\\\"ins\\\"> + <ins>' + diff[1] + '</ins></div>\\n';\r\n      }\r\n    }\r\n    html += '</div>';\r\n    return html;\r\n  }\r\n}\r\n"]}